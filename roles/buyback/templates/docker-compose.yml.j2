services:
  web:
    build: .
    restart: always
    command: gunicorn config.wsgi:application --bind 0.0.0.0:8000
    env_file:
      - ./.env
    volumes:
      - static_volume:/code/staticfiles
      - media_volume:/code/mediafiles
    depends_on:
      - redis
      - db
  db:
    image: {{ buyback_postgres_image }}
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./.env

  redis:
    image: {{ buyback_redis_image }}

  celery:
    build: .
    restart: always
    command: celery -A config worker -l info
    volumes:
      - .:/code
    env_file:
      - ./.env
    depends_on:
      - db
      - redis
      - web

  nginx:
    build: ./nginx
    restart: always
    volumes:
      - static_volume:/code/staticfiles
      - media_volume:/code/mediafiles
    networks:
      - default
      - traefik_ingress
    depends_on:
      - web
    labels:
      - traefik.enable=true
      - traefik.http.routers.buyback.rule=Host(`{{ buyback_domain }}`)
      # - traefik.docker.network=traefik_ingress
  backup:
    image: {{ buyback_backup_image }}
    restart: always
    env_file:
      - ./.env

networks:
  traefik_ingress:
    external: true

volumes:
  postgres_data:
  static_volume:
  media_volume:
