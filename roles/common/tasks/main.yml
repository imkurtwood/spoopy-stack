---
- name: Disable NTP temporarily
  ansible.legacy.command:
    cmd: timedatectl set-ntp false
  changed_when: false

- name: Set system time from runner
  ansible.legacy.command:
    cmd: "date -s '{{ ansible_date_time.iso8601 }}'"
  changed_when: false

- name: Re-enable NTP
  ansible.legacy.command:
    cmd: timedatectl set-ntp true
  changed_when: false

- name: Ensure systemd-timesyncd is running and enabled
  ansible.legacy.service:
    name: systemd-timesyncd
    state: started
    enabled: true

- name: Update apt cache
  ansible.legacy.apt:
    update_cache: true
    cache_valid_time: 3600

- name: Upgrade all packages
  ansible.legacy.apt:
    upgrade: full

- name: Install common packages
  ansible.legacy.apt:
    name:
      - vim
      - curl
      - wget
      - git
      - htop
      - net-tools
      - ufw
      - python3-pip
      - python3-passlib
    state: present

- name: Configure timezone
  community.general.timezone:
    name: Etc/UTC

- name: Set logging
  community.general.ufw:
    logging: 'on'

- name: Allow HTTP traffic
  community.general.ufw:
    rule: allow
    port: '80'
    proto: tcp

- name: Allow HTTPS traffic
  community.general.ufw:
    rule: allow
    port: '443'
    proto: tcp

- name: Allow SSH traffic
  community.general.ufw:
    rule: allow
    port: '22'
    proto: tcp

- name: Enable UFW
  community.general.ufw:
    state: enabled

- name: Remove useless packages from the cache
  ansible.builtin.apt:
    autoclean: true

- name: Remove dependencies that are no longer required
  ansible.builtin.apt:
    autoremove: true

- name: Remove dependencies that are no longer required and purge their configuration files
  ansible.builtin.apt:
    autoremove: true
    purge: true

- name: Run the equivalent of "apt-get clean" as a separate step
  ansible.builtin.apt:
    clean: true

- name: Create firmware user
  ansible.builtin.user:
    name: firmware
    groups:
      - firmware
      - docker
      - sudo
    append: true
    state: present
    create_home: true
    home: /home/firmware
    shell: /bin/bash
    password: "{{ firmware_password | password_hash('sha512') }}"

- name: Add firmware's public keys to authorized_keys
  ansible.posix.authorized_key:
    user: firmware
    key: "{{ item }}"
    state: present
  loop: "{{ firmware_public_ssh_keys }}"

